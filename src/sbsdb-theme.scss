// -> https://material.angular.io/guide/theming
// Plus imports for other components in your app.
@use '~@angular/material' as mat;
@import "app/shared/table-theme";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

/* selbstgestrickte Palette
   -> http://mcg.mbitson.com/#!?mcgpalette0=%231b72b8&mcgpalette1=%23ff9800
   -> https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=1b72b8&secondary.color=FF9800
 */
$hb-blue: (
  50: #e4eef6,
  100: #bbd5ea,
  200: #8db9dc,
  300: #5f9ccd,
  400: #3d87c3,
  500: #1b72b8,
  600: #186ab1,
  700: #145fa8,
  800: #1055a0,
  900: #084291,
  A100: #bed6ff,
  A200: #8bb6ff,
  A400: #5896ff,
  A700: #3f86ff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #ffffff,
  ),
);
$hb-blue-alt: (
  50: #e4ebf8,
  100: #bcceec,
  200: #8fade0,
  300: #628cd4,
  400: #4073ca,
  500: #1e5ac1,
  600: #1a52bb,
  700: #1648b3,
  800: #123fab,
  900: #0a2e9e,
  A100: #cbd5ff,
  A200: #98acff,
  A400: #6583ff,
  A700: #4c6fff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #ffffff,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$sbsdb-app-primary: mat.define-palette($hb-blue); //mat.$deep-orange-palette);
$sbsdb-app-accent: mat.define-palette(mat.$deep-orange-palette, A200, A100, A400); // 700, 500, 900); //mat.$indigo-palette

// The warn palette is optional (defaults to red).
$sbsdb-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$sbsdb-app-theme: mat.define-light-theme($sbsdb-app-primary, $sbsdb-app-accent, $sbsdb-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($sbsdb-app-theme);

// classes fuer allgemeine Tags
@mixin material-colors($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .md-text-color {
    color: mat.get-color-from-palette($foreground, text);
  }
  .md-primary-color {
    color: mat.get-color-from-palette($primary);
  }
  .md-primary-highlight-color2 {
    color: mat.get-color-from-palette($primary, A400);
  }
  .md-primary-highlight-color {
    color: mat.get-color-from-palette($primary, A200);
  }
  .md-primary-shadow {
    background-color: mat.get-color-from-palette($primary, A400, 0.2);
  }
  .md-primary-shadow-hover:hover {
    background-color: mat.get-color-from-palette($primary, A400, 0.2);
  }
  .md-accent-color {
    color: mat.get-color-from-palette($accent);
  }
  .md-accent-background-color {
    background-color: mat.get-color-from-palette($accent, A200);
  }
  .md-accent-hover {
    background-color: mat.get-color-from-palette($accent, A200, 0.08);
  }
  .md-background-color {
    background-color: mat.get-color-from-palette($background, background);
  }
  .md-background-color-hover {
    background-color: mat.get-color-from-palette($background, hover);
  }
  .mat-toolbar.head-spk {
    background: linear-gradient(
      to bottom,
      mat.get-color-from-palette($primary, 200) 0%,
      // A200
      mat.get-color-from-palette($primary, 700) 100% // A700
    );
  }

  // Angular und SCSS ** TODO CSS-Variable sind Kruecken => mit spezifischen mixins loesen
  // mixins und SCSS-Variablen ($...) die hier definiert werden, sind in den .scss-Dateien der Komponenten nur verwendbar,
  // wenn jeweils diese Datei per @import eingebunden wird. Dadurch wuerde aber das hier generierte CSS x-fach im Code
  // auftauchen und das ist ja nicht der Sinn der Sache (partial imports wuerden noch ein weiteres Fass aufmachen, bringt
  // also auch nichts).
  // Die Loesung ist, alles, was nicht als CSS-class definiert werden kann, hier als CSS-Variable zu deklarieren. Nicht
  // sehr elegant, dafuer funktioniert's mit wenig Overhead und die Farben koennen an einer Stelle verwaltet werden.
  :root {
    // red = 0; blue = 240 / google-material #500: indigo = 230; orange = 35; deep orange = 14; cyan = 186; blue = 206; red = 4
    // sehr helle Hintergrundfarbe passend zu $primary
    --md-details-background-color: hsl(240, 100%, 99%);
    // helle Hintergrundfarbe passend zu $primary
    --md-details-background-color-highlight: hsl(240, 100%, 96%);
    --md-details-border-color: #c0c0c0;
    --md-light-gray-background-color: #f9f9f9; // hellgrauer Hintergrund
    --md-row-active-background-color: #efefef; // grauer Hintergrund f. :hover-Effekt
    --md-row-hover-background-color: #f4f4f4; // grauer Hintergrund f. :active-Effekt
  }
}

@mixin custom-theme($theme) {
  @include material-colors($theme);
  @include table-theme($theme);
}
@include custom-theme($sbsdb-app-theme);

// orig:    "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
