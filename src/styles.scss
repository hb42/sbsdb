/* body reset */
html, body {
  height: 100%;
  width: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

/* debugging info */
.debug {
  color: gray;
  font-size: 13px;
}

/* fill space between items */
.fill {
  flex: 1;
}

$headerHeight: 60px;
$footerHeight: 30px;

/* sidenav test */
#container {
  position: absolute;
  top: $headerHeight;
  bottom: $footerHeight;
  left: 0;
  right: 0;
}

#sidenav {
  display: flex;
  align-items: center;
  justify-content: center;
  //width: 200px;
}

#header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

#footer {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

/* flex layout */

/* Komplette Seite belegen */
.flex-page, sbsdb-root {
  position: absolute;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

/* children vertikal anordnen */
.flex-col, sbsdb-root {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  flex: auto;
  height: 100%;
  width: 100%;
}

/* children horizontal anordnen */
.flex-row {
  display: flex;
  flex-direction: row;
  overflow: hidden;
  flex: auto;
  height: 100%;
  width: 100%;
}

/* Element innerhalb flex-col oder flex-row */
/* position:relative ist wichtig, damit auch der gesamte Platz belegt wird.
   Breite bzw. Hoehe immer mit height & min-height bzw. width & min-width auf den
   gleichen Wert setzen (ausser % -> min-width:100px; width:100%).
 */
.flex-panel {
  overflow: hidden;
  position: relative;
}

/* flex-panel, das den "Rest" belegt (width|height 100%) */
/* Sonst fkt. Splitter nicht */
.flex-max {
  flex-grow: 100;
  flex-shrink: 100;
}

/* Inhalt eines flex-panel mit Scrollbalken */
.flex-content {
  height: 100%;
  width: 100%;
  overflow: auto;
  display: block;
}

/* Inhalt eines flex-panel ohne Scrollbalken */
.flex-content-fix {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

sbsdb-head {
  height: $headerHeight;
  min-height: $headerHeight;
  width: 100%;
  overflow: hidden;
}

sbsdb-foot {
  height: $footerHeight;
  width: 100%;
  overflow: hidden;
}
.footer {
  height: $footerHeight !important;
  min-height: $footerHeight !important;
}

.header {
  height: $headerHeight !important;
  min-height: $headerHeight !important;
}

.fullsize {
  height: 100%;
  width: 100%;
}

/* Styles, die in den Component-Stylesheets nicht funktionieren
   (waere auch mit "encapsulation: ViewEncapsulation.None" zu loesen,
    dann sind aber alle Component-Styles global)
 */

/* ap.component */
.bst-tooltip {
  white-space: pre-wrap;
  font-family: "Roboto Mono", sans-serif;
  font-size: 11px;
  max-width: 300px !important;
}

/* MatTable */

.spinner-container {
  height: 36px;
  width: 39px;
  margin-left: 300px;
  position: fixed;
}

.spinner-container mat-spinner {
  margin: 130px auto 0 auto;
}

.mat-header-cell {
  flex-direction: column;
  align-items: flex-start;
}

/* Standard fuer Tabelle/Zellen */
td.mat-cell,
td.mat-footer-cell,
th.mat-header-cell {
  padding-right: 15px;
}

table.mat-table {
  table-layout: fixed;
  width: 100%;
  //white-space: nowrap;
}

// Zeilenumbruch in der Zelle Umschalten
table:not(.wrap-cell) .mat-cell > div {
  white-space: nowrap;
}

.mat-cell div {
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: break-word;
}

.icon-column {
  width: 50px;
}

/* Menue
   damit Checkboxes mit "fill" ausgerichtet werden koennen */
.menue-entry {
  display: flex !important;
  align-items: center !important;
}

.menue-checkbox {
  padding-left: 10px;
}

/* breitere Menues erlauben */
.mat-menu-panel {
  max-width: 300px !important;
}

// so koennte der fixe Teil der Tabelle angesprochen werden
//.mat-table-sticky {
//  border-top: 1px solid #e0e0e0;
//}

.spacer {
  min-width: 25px;
}
.spacer2 {
  margin-right: 10px;
}
.spacer3 {
  margin-right: 25px;
}
.menu-spacer {
  color: rgba(0,0,0,0.22);
  padding-left: 6px;
  padding-right: 6px;
}

.status-item {
  padding: 0 10px;
}

// mat-card custom title

.card-title {
  padding: 5px 8px 5px 16px;
  border-radius: 4px;
  display: flex;
  flex-direction: row;
  align-items: center;
  color: rgba(0, 0, 0, 0.54);
  font-size: 14px;
  height: 40px;
  margin-bottom: 15px;
}

// links ohne a | button
.clickable {
  cursor: pointer;
}

// detail cell

.sub-table {
  min-width: 300px;
  margin-bottom: 25px;
}
.sub-table-head-title {
  float: left;
}
.sub-table-head-button {
  float: right;
}
.sub-table-head-button .mat-icon-button {
  height: 24px;
  width: 24px;
  line-height: 16px;
  padding-left: 1px;
}
.sub-table-head-button .material-icons {
  font-size: 18px;
  line-height: 16px;
}
.edit-button {
  color: gray;
}

.sub-table-link-button.mat-icon-button {
  width: 22px;
  height: 22px;
  line-height: 16px;
}
.sub-table-link-button .material-icons {
  font-size: inherit;
  padding-bottom: 3px;
}

// hover-Effekt fuer iccon-button + stroked-button
.mat-stroked-button:not(.mat-button-disabled):hover,
.mat-icon-button:not(.mat-button-disabled):hover {
  background-color: rgba(0,0,0,0.1);
}

/* Fehler bei Eingabefeldern:
   Label nicht rot faerben (Fehlermeldung in rot genuegt)
   statt dessen originale Label-Farbe
*/
.mat-form-field.mat-form-field-invalid .mat-form-field-label {
  color: rgba(0, 0, 0, 0.54);
}

/* Dialog fuer Extprog-Aenderungen am oberen Bildschirmrand positionieren.
   (der class-Name wird als Parameter "panelClass" in dialog.open() gesetzt)
 */
.extProgDialogPosition {
  top: 30px !important;
  position: absolute !important;
}
/* Select-Box fuer Extprog-Aenderungen vergroessern.
   (class muss global definiert werden, da das panel an body haengt)
 */
.extProgSelect {
  max-height: 50% !important;
}


.oeffnungszeiten {
  white-space: pre-wrap !important;
  font-family: "Roboto Mono", monospace !important;
  font-size: 13px !important;
}

/* TODO Das muss eigentlich in ap.component.scss
        Warum es von da aus nicht greift waere mal noch zu eruieren
 */
.search-field .mat-form-field-wrapper {
  bottom: 4px;
}

.search-field .mat-form-field-underline {
  bottom: 22px;
}

.search-field .mat-form-field-empty.mat-form-field-label {
  color: rgba(255, 110,64, 0.4); // accent color f. placeholder
}

.mat-dialog-container {
  background: #f8f8f8;
}
